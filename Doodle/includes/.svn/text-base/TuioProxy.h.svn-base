/* (C) 2009 by Andrea Franceschini <andrea.franceschini@gmail.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef TUIOPROXY_H_
#define TUIOPROXY_H_

#include <QObject>
#include <TUIO/TuioObject.h>
#include <TUIO/TuioCursor.h>
#include "TuioListener.h"

namespace Doodle {
class TuioProxy : public QObject {
	Q_OBJECT

public:
	TuioProxy(int);

	void addTuioObject(TUIO::TuioObject*);
	void updateTuioObject(TUIO::TuioObject*);
	void removeTuioObject(TUIO::TuioObject*);

	void addTuioCursor(TUIO::TuioCursor*);
	void updateTuioCursor(TUIO::TuioCursor*);
	void removeTuioCursor(TUIO::TuioCursor*);

	void refresh(TUIO::TuioTime ttime);

signals:
	void addTangible(long, int, float, float, TUIO::TuioTime, float, float, float, float, float, float, float, int);
	void updateTangible(long, int, float, float, TUIO::TuioTime, float, float, float, float, float, float, float, int);
	void removeTangible(long, int, float, float, TUIO::TuioTime, float, float, float, float, float, float, float, int);

	void addCursor(long, int, float, float, TUIO::TuioTime, float, float, float, float, int);
	void updateCursor(long, int, float, float, TUIO::TuioTime, float, float, float, float, int);
	void removeCursor(long, int, float, float, TUIO::TuioTime, float, float, float, float, int);

	void tuioCycle(TUIO::TuioTime);

private:
	TuioListener* _tuioListener;
};
}

#endif /* TUIOPROXY_H_ */
